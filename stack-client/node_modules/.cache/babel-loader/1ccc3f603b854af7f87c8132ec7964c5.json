{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keuda\\\\Desktop\\\\react\\\\react\\\\project\\\\stack-client\\\\src\\\\components\\\\category.js\";\nimport React from 'react';\nimport '../App.css';\nimport api from \"../actions/api.js\";\nimport ButterToast, { Cinnamon } from \"butter-toast\";\nimport { AssignmentTurnedIn, ExtensionSharp } from \"@material-ui/icons\";\nconst initialState = {\n  name: \"\",\n  nameError: \"\"\n};\n\nclass Category extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleChange = e => {\n      const isCheckbox = e.target.type === \"checkbox\";\n      this.setState({\n        [e.target.name]: isCheckbox ? e.target.checked : e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        console.log(this.state);\n        api.category().fetchAll().then(res => {\n          const user = res.data.filter(user => user.email === this.state.name);\n\n          if (user.length > 0) {\n            ButterToast.raise({\n              content: /*#__PURE__*/React.createElement(Cinnamon.Crisp, {\n                title: \"Online Store\",\n                content: \"This Email Already Exists!\",\n                scheme: Cinnamon.Crisp.SCHEME_PURPLE,\n                icon: /*#__PURE__*/React.createElement(ExtensionSharp, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 35\n                  }\n                }),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 34\n                }\n              })\n            });\n          } else {\n            api.registerUser().create(this.state).then(res => {\n              ButterToast.raise({\n                content: /*#__PURE__*/React.createElement(Cinnamon.Crisp, {\n                  title: \"Online Store\",\n                  content: \"Register successfully\",\n                  scheme: Cinnamon.Crisp.SCHEME_PURPLE,\n                  icon: /*#__PURE__*/React.createElement(AssignmentTurnedIn, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 39\n                    }\n                  }),\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 38\n                  }\n                })\n              });\n              this.setState(initialState);\n              this.props.history.push('/login');\n            });\n          }\n        });\n      }\n    };\n\n    this.validate = () => {\n      let nameError = \"\";\n\n      if (!this.state.name) {\n        nameError = \"Category Name Cannot Be Blank\";\n      }\n\n      if (nameError) {\n        this.setState({\n          nameError\n        });\n        return false;\n      }\n\n      return true;\n    };\n  }\n\n  render() {\n    if (localStorage.getItem('userEmail')) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"col-md-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        autoComplete: \"off\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"form-group row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        class: \"col-md-4 col-form-label text-md-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 45\n        }\n      }, \"Category Name\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"fname\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 49\n        }\n      }, this.state.nameError))), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"col-md-4 offset-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }\n      }, \"Add\"))))))));\n    }\n  }\n\n}\n\nexport default Category;","map":{"version":3,"sources":["C:/Users/keuda/Desktop/react/react/project/stack-client/src/components/category.js"],"names":["React","api","ButterToast","Cinnamon","AssignmentTurnedIn","ExtensionSharp","initialState","name","nameError","Category","Component","state","handleChange","e","isCheckbox","target","type","setState","checked","value","handleSubmit","preventDefault","isValid","validate","console","log","category","fetchAll","then","res","user","data","filter","email","length","raise","content","Crisp","SCHEME_PURPLE","registerUser","create","props","history","push","render","localStorage","getItem","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport api from \"../actions/api.js\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { AssignmentTurnedIn , ExtensionSharp } from \"@material-ui/icons\";\r\n\r\nconst initialState = {\r\n    name: \"\",\r\n    nameError: \"\"\r\n}\r\n\r\nclass Category extends React.Component {\r\n\r\n    state =initialState;\r\n\r\n    handleChange = e => {\r\n        const isCheckbox = e.target.type === \"checkbox\";\r\n        this.setState({\r\n            [e.target.name]: isCheckbox\r\n                ? e.target.checked\r\n                : e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const isValid = this.validate();\r\n        if(isValid){\r\n            console.log(this.state);\r\n            api.category().fetchAll().then(res => {\r\n                const user = res.data.filter( user => user.email===this.state.name);\r\n                if(user.length>0){\r\n                    ButterToast.raise({\r\n                        content: <Cinnamon.Crisp title=\"Online Store\"\r\n                            content=\"This Email Already Exists!\"\r\n                            scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                            icon={<ExtensionSharp />}\r\n                        />\r\n                    });\r\n                }else{\r\n                    api.registerUser().create(this.state)\r\n                    .then(res => {\r\n                        ButterToast.raise({\r\n                            content: <Cinnamon.Crisp title=\"Online Store\"\r\n                                content=\"Register successfully\"\r\n                                scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                                icon={<AssignmentTurnedIn />}\r\n                            />\r\n                        })\r\n                        this.setState(initialState)\r\n                        this.props.history.push('/login')\r\n                    } );\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    validate = () => {\r\n        let nameError = \"\";\r\n\r\n        if(!this.state.name){\r\n            nameError=\"Category Name Cannot Be Blank\"\r\n        }\r\n\r\n        if(nameError){\r\n            this.setState({ nameError });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render (){\r\n        if(localStorage.getItem('userEmail')){\r\n            return (\r\n                <div class=\"container\">\r\n                <br></br><br></br>\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-md-10\">\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">Category</div>\r\n                                <div class=\"card-body\">\r\n                                    <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                                        <div class=\"form-group row\">\r\n                                            <label class=\"col-md-4 col-form-label text-md-right\">Category Name</label>\r\n                                            <div class=\"col-md-6\">\r\n                                                <input type=\"text\" class=\"form-control\" name=\"fname\" value={this.state.name} onChange={this.handleChange} />\r\n                                                <div style={{color : \"red\"}}>{this.state.nameError}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                                \r\n                                        <div class=\"col-md-4 offset-md-4\">\r\n                                            <button type=\"submit\" class=\"btn btn-primary\">\r\n                                                Add\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}